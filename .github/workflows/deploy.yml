name: CodeDeploy 기반 배포하기

on:
  push:
    branches:
      - main

jobs:
  CodeDeployBased-Deploy-Job:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 의 파일 가져오기
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 생성
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: 배포에 필요한 파일과 폴더 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: AWS Resource에 접근하기 위해 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3 에 배포자료 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://for-web-server-04/$GITHUB_SHA.tar.gz

# CodeDeploy에 생성한 배포그룹 production 에 정해놓은 배포 규칙에 따라 배포작업 진행
      - name: CodeDeploy를 활용해 EC2에 배포하기
        run: aws deploy create-deployment
          --application-name web-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name production
          --s3-location bucket=for-web-server-04,bundleType=tgz,key=$GITHUB_SHA.tar.gz